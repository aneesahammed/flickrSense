<Page
    x:Class="flickrSense.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Template10.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:listControl="using:UwpHelpers.Controls.ListControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding Source={StaticResource Locator}, Path=MainPageVm}"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:ValueWhenConverter x:Key="BooleanToVisibilityConverterKey">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>

            <converters:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Value>

            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Otherwise>

            <converters:ValueWhenConverter.OtherwiseValueBack>
                <x:Boolean>False</x:Boolean>
            </converters:ValueWhenConverter.OtherwiseValueBack>

        </converters:ValueWhenConverter>

        <converters:ValueWhenConverter x:Key="InvertBooleanToVisibilityConverterKey">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>

            <converters:ValueWhenConverter.Value>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Value>

            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Otherwise>

            <converters:ValueWhenConverter.OtherwiseValueBack>
                <x:Boolean>False</x:Boolean>
            </converters:ValueWhenConverter.OtherwiseValueBack>

        </converters:ValueWhenConverter>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton
                Name="Search"
                x:Uid="searchBtn"
                Command="{Binding Path=ToggleSearchBoxVisibilityCommand}"
                Icon="Find"
                Label="Search"
                Visibility="Visible" />
        </CommandBar>
    </Page.BottomAppBar>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid
            x:Name="layoutGrid"
            Margin="12,12,0,12"
            EntranceNavigationTransitionInfo.IsTargetElement="True"
            RelativePanel.AlignBottomWithPanel="True"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True">

            <!--<Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>-->

            <!--  Search  -->
            <AutoSuggestBox
                x:Name="searchBox"
                Grid.Row="0"
                Width="200"
                Margin="0,12,0,0"
                KeyUp="AutoSuggestBox_KeyUp"
                PlaceholderText="Search"
                QueryIcon="Find"
                Visibility="{Binding Path=IsSearchBoxVisible, Converter={StaticResource BooleanToVisibilityConverterKey}}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="QuerySubmitted">
                        <core:InvokeCommandAction Command="{Binding Path=SearchQueryCommand, Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AutoSuggestBox>


            <!--  AdaptiveGridView  -->
            <listControl:AdaptiveGridView
                x:Name="adaptiveGridView"
                Margin="0,52,0,0"
                IsItemClickEnabled="True"
                ItemsSource="{Binding Path=PhotoCollection}"
                MinItemHeight="250"
                MinItemWidth="250"
                SelectionMode="None">

                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                        <core:InvokeCommandAction Command="{Binding Path=PhotoSelectedCommand, Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>

                <listControl:AdaptiveGridView.ItemTemplate>

                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image
                                x:Name="thumbnail"
                                Grid.Row="0"
                                Source="{Binding ThumbnailPath}"
                                Stretch="Uniform" />
                            <TextBlock
                                Grid.Row="1"
                                Margin="8,8,8,8"
                                VerticalAlignment="Bottom"
                                MaxLines="1"
                                Text="{Binding Title}"
                                TextAlignment="Center"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />
                        </Grid>
                    </DataTemplate>
                </listControl:AdaptiveGridView.ItemTemplate>
            </listControl:AdaptiveGridView>
        </Grid>

        <Grid
            Background="#FFF"
            Canvas.ZIndex="2"
            RelativePanel.AlignBottomWithPanel="True"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True"
            Visibility="{Binding Path=IsNetworkAvailable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvertBooleanToVisibilityConverterKey}}">
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="No Internet connection is available, Please try again!" />
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->

                        <Setter Target="adaptiveGridView.MinItemWidth" Value="150" />
                        <Setter Target="adaptiveGridView.MinItemHeight" Value="150" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <Setter Target="adaptiveGridView.MinItemWidth" Value="200" />
                        <Setter Target="adaptiveGridView.MinItemHeight" Value="200" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <Setter Target="adaptiveGridView.MinItemWidth" Value="250" />
                        <Setter Target="adaptiveGridView.MinItemHeight" Value="250" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>







